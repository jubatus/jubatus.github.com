jenerator
=========

Synopsis
--------------------------------------------------

.. code-block:: shell

  jenerator -l <lang> [options ...] idl ...

Description
--------------------------------------------------

``jenerator`` は拡張 MessagePack-IDL ファイルから、Proxy の実装、サーバのテンプレート、C++ クライアントを生成する。

``jenerator`` はデフォルトではインストールされない (ソースの ``tools/jenerator`` ディレクトリを参照)。

Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* ``[]`` はデフォルト値を意味する。

.. program:: jenerator

.. option:: -l <lang>

   生成するクライアントコードの言語。現在は ``cpp``, ``java``, ``python``, ``ruby`` がサポートされている。
   サーバ/Proxy を生成したい場合は ``server`` を指定する。

.. option:: -o <dirpath>

   生成されたソースファイルを出力するディレクトリ。

   指定されない場合は、カレントディレクトリが使用される。

.. option:: -i

   ``#include`` 命令に相対パスを使用する。

   C++ コード (サーバ/Proxy/C++ クライアント) を生成する場合のみ有効である。
   このオプションは Jubatus 開発者による利用を想定している。
   生成されたコードを Jubatus のソースツリー内でビルドする場合を除き、指定する必要はない。

.. option:: -n <namespace>

   生成されたソースで指定された名前空間を宣言する。

.. option:: -t

   サーバのテンプレートを生成する。

   サーバ/Proxy を生成する場合のみ有効である。

.. option:: -g <guard>

   ヘッダファイルに使用するインクルードガードのプレフィックスを指定する。

   C++ コード (サーバ/Proxy/C++ クライアント) を生成する場合のみ有効である。

.. option:: -help, --help

   このコマンドの簡単な使い方を表示する。
