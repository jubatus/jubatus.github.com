Recommender
===================

ここではJubatusの推薦（Recommender）である、jubarecommenderを使用した、Jubatus Clientの使い方を説明します。

推薦（Recommender）とは、類似するデータの推薦やデータ中の同属性の推薦を行う機能であり、検索サイト連動広告やECサイト商品お勧めなどに利用することができます。


-----------------------------------
サンプルプログラムの概要
-----------------------------------


サンプルとして、2012年日本プロ野球の野手成績を学習し、似たタイプ（成績）の野手を推薦するプログラム「npb_similar_player」を用いて説明していきます。

最初に、 `プロ野球データfreak <http://baseball-data.com/>`_ から取得した「規定打席の1/3以上の全野手のデータ」を打席数順にソートした CSV データ (`baseball.csv <https://raw.github.com/jubatus/jubatus-example/master/npb_similar_player/dat/baseball.csv>`_) をクライアント側で用意し、推薦するためのモデルをサーバ側に学習させます。

次に、推薦用の入力データとして学習時と同様にCSVファイルから名前だけを抽出しサーバ側に与え、サーバ側では先ほど学習したモデルを用い、タイプ（成績）が似ている野手を推薦し返却します。
そして、クライアント側で受け取った結果を出力するプログラムとなっています。

例えば、推薦用の入力データとして「中田翔」を渡すと、「player 中田翔 is similar to : 井口資仁 新井貴浩 中村紀洋」と似たタイプ（成績）の野手トップ3が返却されます。


--------------------------------
処理の流れ
--------------------------------

Jubatus Clientを使ったコーディングは、主に以下の流れになります。

* Upadate

 1. Jubatus Serverへの接続設定

  サーバ側で起動している Jubatus ServerのHOSTやPORTを指定し、接続設定をします。

 2. 学習用データの準備

  baseball.csvの全野手の成績から学習用データを作成します。

 3. データの学習（学習モデルの更新）

  作成した学習用データ1行ずつをupdate_rowメソッドでサーバ側に与え、学習を行います。

* Analyze

 1. Jubatus Serverへの接続設定

  サーバ側で起動しているJubatus ServerのHOSTやPORTを指定し、接続設定をします。

 2. 推薦用データの準備

  推薦用にサーバ側に投げる、野手情報のデータを作成します。

 3. 学習モデルに基づく推薦

  作成した推薦用データを入力値とし、similar_row_from_idメソッドで学習モデルに基づいた推薦をします。

 4. 結果の出力

  similar_row_from_idメソッドの戻り値である推薦結果を出力します。

--------------------------------
サンプルプログラム
--------------------------------

.. toctree::
   :maxdepth: 2

   recommender_python
   recommender_ruby
   recommender_java
