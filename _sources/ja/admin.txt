
Administrator's Guide
=====================

このページでは、Jubatus の管理者と運用者向けの説明を行います。


Recommended process configuration
---------------------------------

Jubatus を高い信頼性のもとで提供するためには、分散環境で動作させる必要があります。
また、高いパフォーマンスを維持するためには、Jubatus および Jubatus に関連するプロセス配置構成に気をつける必要があります。

われわれが推奨するプロセス配置構成は以下の通りです。

.. figure:: ../_static/process_configuration.png
   :width: 90 %
   :alt: process configuration

Jubakeeper
~~~~~~~~~~

運用の容易さ、アプリケーションの実装の容易さから、クライアントアプリケーションと 1:1 の構成とし、クライアントアプリケーションとともにスケールする運用を推奨します。

クライアントアプリケーションから Jubakeeper へ通信できない場合(プロセスがダウンしている など)に対しては、提供するサービスに応じて信頼性を保証する方法を検討する必要があります。例えば、以下のようなことが考えられます。

#. Jubakeeper プロセスを監視し、Jubakeeper と通信できない場合は、クライアントアプリケーションへのアクセスを遮断する。
#. 別の Jubakeeper との通信へ切り替える。

Jubaserver
~~~~~~~~~~

``--name`` で同じ名前を指定することで、複数のサーバプロセスが協調動作します。Jubatus は、サーバプロセスが 1つ でも動作している限り、利用可能です。

上の図では、マシンの ``N`` 台 に障害が発生した場合でも、すべてのインスタンスが利用可能なよう、 ``N + 1`` 台 のマシンに分散してプロセスを配置しています。

Jubatus はすべてのデータをメモリ上で処理するという特徴があります。マシンのリソース(特にメモリ)が不足しないよう、サーバプロセスの配置には注意する必要があります。

ZooKeeper
~~~~~~~~~

Jubatus を分散環境で動作させる際、ZooKeeper が利用できない状況は致命的です。ZooKeeper を高い信頼性で動作させるために、以下のことを注意します。詳細は `ZooKeeperのドキュメント <http://zookeeper.apache.org/doc/current/>`_ を参照して下さい。

#. 奇数台のマシンによるクラスタ構成(アンサンブル)で運用します。
#. ZooKeeper のパフォーマンスが低下し、Jubatus の動作が不安定になることを避けるため、ZooKeeper 専用のマシンを用意することを推奨します。

Managing Clusters
-----------------

[tbd]

Monitoring
----------

[tbd]

Logging
-------

[tbd]

Save and Load
-------------

[tbd]
